<%- include('partials/header') %>

<div class="flex justify-between items-center my-6">
  <h2 class="text-2xl font-bold">Admin WhatsApp QR Code</h2>
  <a href="/dashboard" class="inline-flex items-center bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded transition-colors">
    <i class="fas fa-arrow-left mr-2"></i> Back to Admin Dashboard
  </a>
</div>

<div class="bg-white rounded-lg shadow overflow-hidden">
  <div class="bg-gray-100 px-4 py-3 border-b">
    <h5 class="font-medium">Scan QR Code with WhatsApp (Admin Session)</h5>
  </div>
  <div class="p-6 text-center">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
    <% if (connectionStatus === 'connected') { %>
      <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded mb-4">
        <i class="fas fa-check-circle mr-2"></i> Admin WhatsApp is already connected!
      </div>
      <p class="mb-4">This is the global WhatsApp session for the system. You can disconnect and reconnect with a new QR code if needed.</p>
      <button id="logout_whatsapp" class="inline-flex items-center bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded transition-colors">
        <i class="fas fa-unlink mr-2"></i> Disconnect Admin WhatsApp
      </button>
    <% } else if (connectionStatus === 'timeout') { %>
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded mb-4">
        <i class="fas fa-exclamation-circle mr-2"></i> QR code has expired
      </div>
      <p class="mb-4">The QR code has expired because it was not scanned within 1 minute.</p>
      <div class="flex space-x-3 justify-center">
        <button id="generate-qr" class="inline-flex items-center bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors">
          <i class="fas fa-qrcode mr-2"></i> Generate New QR Code
        </button>
        <a href="/dashboard" class="inline-flex items-center bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded transition-colors">
          <i class="fas fa-arrow-left mr-2"></i> Back to Admin Dashboard
        </a>
      </div>
    <% } else if (qrCode) { %>
      <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 rounded mb-4">
        <strong class="font-bold">Important:</strong> Scan this QR code with your WhatsApp app to connect the admin session.
      </div>
      
      <div class="qr-code mx-auto max-w-xs">
        <img src="<%= qrCode %>" alt="Admin WhatsApp QR Code" class="w-full">
      </div>
      
      <div id="timeout-message" class="mt-4 mb-2 text-red-600" style="display: none;">
        <i class="fas fa-exclamation-circle"></i> QR code will expire in <span id="timeout-countdown">60</span> seconds if not scanned.
      </div>
      
      <p class="mt-2 mb-4">If the QR code expires, click the button below to generate a new one.</p>
      
      <div class="flex space-x-3 justify-center">
        <button id="refresh-qr" class="inline-flex items-center bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors">
          <i class="fas fa-sync-alt mr-2"></i> Refresh QR Code
        </button>
        <a href="/dashboard" class="inline-flex items-center bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded transition-colors">
          <i class="fas fa-arrow-left mr-2"></i> Back to Admin Dashboard
        </a>
      </div>
    <% } else { %>
      <p class="mb-4">Click the button below to generate a QR code for admin WhatsApp connection:</p>
      <div class="flex space-x-3 justify-center">
        <button id="generate-qr" class="inline-flex items-center bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors">
          <i class="fas fa-qrcode mr-2"></i> Generate QR Code
        </button>
        <a href="/dashboard" class="inline-flex items-center bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded transition-colors">
          <i class="fas fa-arrow-left mr-2"></i> Back to Admin Dashboard
        </a>
      </div>
      <div id="loading" class="mt-4" style="display: none;">
        <div class="inline-block animate-spin rounded-full h-8 w-8 border-4 border-blue-500 border-t-transparent" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <p class="mt-2">Generating QR code...</p>
      </div>
    <% } %>
  </div>
</div>

<!-- Load toast.css for notifications -->
<link rel="stylesheet" href="/css/toast.css">

<script nonce="<%= nonce %>">
document.addEventListener('DOMContentLoaded', function() {
  // Helper function to get CSRF token
  window.getCSRFToken = function() {
    // First try to get token from form input
    const tokenInput = document.querySelector('input[name="_csrf"]');
    if (tokenInput && tokenInput.value) {
      return tokenInput.value;
    }
    
    // If not found in form, try to get from meta tag
    const metaToken = document.querySelector('meta[name="csrf-token"]');
    if (metaToken && metaToken.content) {
      return metaToken.content;
    }
    
    return '';
  };
  
  // Simple showToast function if not already defined
  if (typeof showToast !== 'function') {
    window.showToast = function(message, type = 'info') {
      // Check if toast-container exists, if not create it
      let container = document.querySelector('.toast-container');
      if (!container) {
        container = document.createElement('div');
        container.className = 'toast-container';
        document.body.appendChild(container);
      }
      
      // Create toast element
      const toast = document.createElement('div');
      toast.className = `toast toast-${type}`;
      
      // Create toast content
      const toastContent = document.createElement('div');
      toastContent.className = 'toast-content';
      toastContent.textContent = message;
      
      // Create close button
      const closeButton = document.createElement('button');
      closeButton.className = 'toast-close';
      closeButton.innerHTML = '&times;';
      closeButton.addEventListener('click', () => {
        toast.classList.add('toast-out');
        setTimeout(() => {
          if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
          }
        }, 300);
      });
      
      // Create progress bar
      const progressContainer = document.createElement('div');
      progressContainer.className = 'toast-progress';
      
      const progressBar = document.createElement('div');
      progressBar.className = 'toast-progress-bar';
      progressBar.style.animation = `progress-bar-animation 5000ms linear forwards`;
      progressContainer.appendChild(progressBar);
      
      // Append elements to toast
      toast.appendChild(toastContent);
      toast.appendChild(closeButton);
      toast.appendChild(progressContainer);
      
      // Add toast to container
      container.appendChild(toast);
      
      // Remove toast after duration
      setTimeout(() => {
        toast.classList.add('toast-out');
        setTimeout(() => {
          if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
          }
        }, 300);
      }, 5000);
      
      return toast;
    };
  }

  const generateQrBtn = document.getElementById('generate-qr');
  const refreshQrBtn = document.getElementById('refresh-qr');
  const loading = document.getElementById('loading');
  const timeoutMessage = document.getElementById('timeout-message');
  const timeoutCountdown = document.getElementById('timeout-countdown');
  const logoutButton = document.getElementById('logout_whatsapp');
  
  // Countdown timer for QR code expiration
  if (timeoutMessage && timeoutCountdown) {
    timeoutMessage.style.display = 'block';
    let countdown = 60;
    const timer = setInterval(() => {
      countdown--;
      timeoutCountdown.textContent = countdown;
      
      if (countdown <= 0) {
        clearInterval(timer);
        window.location.reload(); // Reload page when timer expires
      }
    }, 1000);
  }
  
  function generateQrCode() {
    if (loading) loading.style.display = 'block';
    if (generateQrBtn) generateQrBtn.disabled = true;
    if (refreshQrBtn) refreshQrBtn.disabled = true;
    
    fetch('/admin/api/qrcode', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'CSRF-Token': window.getCSRFToken()
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Reload the page after a short delay to show the new QR code
        setTimeout(() => {
          window.location.reload();
        }, 2000);
      } else {
        showToast(data.message || 'Error generating QR code', 'error');
        if (loading) loading.style.display = 'none';
        if (generateQrBtn) generateQrBtn.disabled = false;
        if (refreshQrBtn) refreshQrBtn.disabled = false;
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showToast('An error occurred while generating QR code', 'error');
      if (loading) loading.style.display = 'none';
      if (generateQrBtn) generateQrBtn.disabled = false;
      if (refreshQrBtn) refreshQrBtn.disabled = false;
    });
  }
  
  // Add event listeners
  if (generateQrBtn) {
    generateQrBtn.addEventListener('click', generateQrCode);
  }
  
  if (refreshQrBtn) {
    refreshQrBtn.addEventListener('click', generateQrCode);
  }
  
  if (logoutButton) {
    logoutButton.addEventListener('click', function() {
      if (confirm('Are you sure you want to logout from admin WhatsApp? This will disconnect the global session.')) {
        fetch('/admin/whatsapp/logout', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'CSRF-Token': window.getCSRFToken()
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showToast('Admin WhatsApp session logged out successfully', 'success');
            setTimeout(() => {
              window.location.href = '/dashboard';
            }, 1500);
          } else {
            showToast(data.message || 'Failed to logout admin WhatsApp session', 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          showToast('An error occurred while logging out', 'error');
        });
      }
    });
  }
  
  // Check connection status periodically
  if (document.querySelector('.qr-code')) {
    const checkStatus = setInterval(() => {
      fetch('/api/status', {
        headers: {
          'Accept': 'application/json',
          'CSRF-Token': window.getCSRFToken()
        }
      })
        .then(response => response.json())
        .then(data => {
          if (data.connectionStatus === 'connected') {
            clearInterval(checkStatus);
            window.location.href = '/dashboard';
          } else if (data.connectionStatus === 'timeout') {
            clearInterval(checkStatus);
            // Redirect ke halaman yang sama untuk menampilkan status timeout
            window.location.reload();
          } else if (data.connectionStatus === 'disconnected' && !data.qrCodeExists) {
            // Jika status disconnected dan QR code tidak ada lagi (sudah expired/timeout)
            clearInterval(checkStatus);
            window.location.reload();
          }
        })
        .catch(error => {
          console.error('Error checking status:', error);
        });
    }, 5000); // Check every 5 seconds
    
    // Tambahkan pengecekan timeout terpisah setelah countdown selesai
    setTimeout(() => {
      // Jika setelah 65 detik masih di halaman yang sama, reload untuk menampilkan status terbaru
      if (document.querySelector('.qr-code')) {
        window.location.reload();
      }
    }, 65000); // 65 detik (60 detik timeout + 5 detik buffer)
  }
});
</script>

<%- include('partials/footer') %> 