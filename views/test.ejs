<%- include('partials/header') %>

<div class="d-flex justify-content-between align-items-center mt-4 mb-4">
  <h2>Send Test Message</h2>
  <a href="/dashboard" class="btn btn-secondary">
    <i class="fas fa-arrow-left"></i> Back to Dashboard
  </a>
</div>

<% if (connectionStatus !== 'connected') { %>
  <div class="alert alert-warning">
    <i class="fas fa-exclamation-triangle"></i> WhatsApp is not connected. Please <a href="/qrcode">connect WhatsApp</a> before sending test messages.
  </div>
<% } %>

<% if (recipients.filter(r => r.active).length === 0) { %>
  <div class="alert alert-warning">
    <i class="fas fa-exclamation-triangle"></i> No active recipients found. Please <a href="/recipients">activate at least one recipient</a> before sending test messages.
  </div>
<% } %>

<div class="row">
  <div class="col-md-7">
    <div class="card">
      <div class="card-header">
        Send Test Message
      </div>
      <div class="card-body">
        <form action="/test" method="POST" id="messageForm">
          <div class="form-group mb-3">
            <label for="messageType" class="form-label">Message Type</label>
            <select class="form-select" id="messageType" name="messageType" onchange="toggleMessageFields()">
              <option value="text">Text Message</option>
              <option value="image">Image Message</option>
            </select>
          </div>
          
          <div id="textFields">
            <div class="form-group mb-3">
              <label for="text" class="form-label">Message Text</label>
              <textarea class="form-control" id="text" name="text" rows="4" placeholder="Enter your message text here" oninput="updatePreview()"></textarea>
            </div>
          </div>
          
          <div id="imageFields" style="display: none;">
            <div class="form-group mb-3">
              <label for="imageUrl" class="form-label">Image URL</label>
              <input type="url" class="form-control" id="imageUrl" name="imageUrl" placeholder="https://example.com/image.jpg">
              <small class="form-text text-muted">Direct URL to an image file (JPG, PNG, etc.)</small>
            </div>
            
            <div class="form-group mb-3">
              <label for="caption" class="form-label">Caption (Optional)</label>
              <input type="text" class="form-control" id="caption" name="caption" placeholder="Image caption">
            </div>
          </div>
          
          <div class="mt-4">
            <h5>Recipients</h5>
            <p>This message will be sent to all active recipients (<%= recipients.filter(r => r.active).length %> active):</p>
            
            <ul class="list-group mb-3">
              <% recipients.filter(r => r.active).forEach(function(recipient) { %>
                <li class="list-group-item">
                  <%= recipient.name %> (<%= recipient.number %>)
                </li>
              <% }); %>
            </ul>
            
            <% if (recipients.filter(r => !r.active).length > 0) { %>
              <p class="text-muted">
                <small>
                  <%= recipients.filter(r => !r.active).length %> inactive recipients will not receive this message.
                  <a href="/recipients">Manage recipients</a>
                </small>
              </p>
            <% } %>
          </div>
          
          <div class="mt-4">
            <button type="submit" class="btn btn-primary" <%= (connectionStatus !== 'connected' || recipients.filter(r => r.active).length === 0) ? 'disabled' : '' %>>
              <i class="fas fa-paper-plane"></i> Send Message
            </button>
            <a href="/dashboard" class="btn btn-secondary ms-2">
              <i class="fas fa-times"></i> Cancel
            </a>
          </div>
        </form>
      </div>
    </div>
  </div>
  
  <div class="col-md-5">
    <div class="card">
      <div class="card-header">
        Message Preview
      </div>
      <div class="card-body">
        <div id="messagePreview" class="p-3 bg-light rounded" style="white-space: pre-wrap; font-family: monospace;">
          Enter a message to see the preview...
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function toggleMessageFields() {
  const messageType = document.getElementById('messageType').value;
  const textFields = document.getElementById('textFields');
  const imageFields = document.getElementById('imageFields');
  const preview = document.getElementById('messagePreview');
  
  if (messageType === 'text') {
    textFields.style.display = 'block';
    imageFields.style.display = 'none';
    updatePreview();
  } else {
    textFields.style.display = 'none';
    imageFields.style.display = 'block';
    preview.innerHTML = 'Image messages will be sent with their caption.';
  }
}

function updatePreview() {
  const messageType = document.getElementById('messageType').value;
  const preview = document.getElementById('messagePreview');
  
  if (messageType === 'text') {
    const text = document.getElementById('text').value;
    if (text.trim() === '') {
      preview.innerHTML = 'Enter a message to see the preview...';
      return;
    }
    
    try {
      // Check if the input is valid JSON
      const jsonData = JSON.parse(text);
      
      // Format the JSON message
      let formattedMessage = "ðŸ“© *New Notification*\n\n";
      formattedMessage += `ðŸ•’ *Time*: ${new Date().toLocaleString()}\n\n`;
      
      // Process each key in the JSON
      Object.keys(jsonData).forEach(key => {
        const value = jsonData[key];
        
        if (typeof value === 'object' && value !== null) {
          formattedMessage += `*${capitalizeFirstLetter(key)}*:\n`;
          
          if (Array.isArray(value)) {
            value.forEach((item, index) => {
              if (typeof item === 'object' && item !== null) {
                formattedMessage += `   ${index + 1}. `;
                Object.keys(item).forEach(itemKey => {
                  formattedMessage += `*${capitalizeFirstLetter(itemKey)}*: ${item[itemKey]}, `;
                });
                formattedMessage = formattedMessage.slice(0, -2);
                formattedMessage += '\n';
              } else {
                formattedMessage += `   ${index + 1}. ${item}\n`;
              }
            });
          } else {
            Object.keys(value).forEach(subKey => {
              const subValue = value[subKey];
              formattedMessage += `   *${capitalizeFirstLetter(subKey)}*: ${subValue}\n`;
            });
          }
          
          formattedMessage += '\n';
        } else {
          formattedMessage += `*${capitalizeFirstLetter(key)}*: ${value}\n`;
        }
      });
      
      preview.innerHTML = formattedMessage;
    } catch (e) {
      // Not valid JSON, treat as plain text
      preview.innerHTML = text;
    }
  }
}

function capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

// Initialize the preview
document.addEventListener('DOMContentLoaded', function() {
  updatePreview();
});
</script>

<%- include('partials/footer') %> 