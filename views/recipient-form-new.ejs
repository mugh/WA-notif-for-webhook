<%- include('partials/header') %>

<div class="container mx-auto px-4 py-6">
  <h2 class="text-2xl font-bold mb-6"><%= isNew ? 'Add New Recipient' : 'Edit Recipient' %></h2>
  
  <% if (typeof error !== 'undefined' && error) { %>
    <script id="flash-message-data" type="application/json">
      {"type": "danger", "text": "<%= error %>"}
    </script>
  <% } %>
  
  <form id="recipientForm" action="<%= isNew ? `/webhooks/${webhookId}/recipients` : `/webhooks/${webhookId}/recipients/${recipient.id}` %>" method="POST" class="bg-white rounded-lg shadow-md p-6">
    <div class="mb-6">
      <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Recipient Name</label>
      <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500" 
             id="name" name="name" value="<%= recipient.name || '' %>" required>
      <p class="mt-1 text-sm text-gray-500">A name to identify this recipient.</p>
    </div>
    
    <div class="mb-6">
      <label for="phoneNumber" class="block text-sm font-medium text-gray-700 mb-1">WhatsApp Phone Number</label>
      <div class="flex">
        <span class="inline-flex items-center px-3 py-2 text-gray-500 bg-gray-100 border border-r-0 border-gray-300 rounded-l-md">
          +
        </span>
        <input type="text" class="flex-1 w-full px-3 py-2 border border-gray-300 rounded-r-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500" 
               id="phoneNumber" name="phoneNumber" value="<%= recipient.phone_number || '' %>" placeholder="e.g. 628123456789" required>
      </div>
      <p class="mt-1 text-sm text-gray-500">Enter the full phone number with country code, without any spaces or special characters (e.g. 628123456789).</p>
    </div>
    
    <div class="mb-6">
      <div class="flex items-center">
        <input type="checkbox" class="h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded" 
               id="active" name="active" <%= (recipient.active || isNew) ? 'checked' : '' %>>
        <label class="ml-2 block text-sm text-gray-700" for="active">Active</label>
      </div>
      <p class="mt-1 text-sm text-gray-500">Only active recipients will receive notifications.</p>
    </div>
    
    <div class="flex items-center mt-6">
      <button type="submit" class="bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded transition-colors">
        <%= isNew ? 'Add Recipient' : 'Update Recipient' %>
      </button>
      <a href="/webhooks/<%= webhookId %>" class="ml-3 bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded transition-colors">
        Cancel
      </a>
    </div>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle form submission with AJAX for both new and edit recipient
    const recipientForm = document.getElementById('recipientForm');
    
    if (recipientForm) {
      recipientForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Show loading state
        const submitButton = recipientForm.querySelector('button[type="submit"]');
        const originalButtonText = submitButton.innerHTML;
        submitButton.innerHTML = 'Saving...';
        submitButton.disabled = true;
        
        // Get form data
        const formData = new FormData(recipientForm);
        
        // Send AJAX request
        fetch(recipientForm.action, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'Accept': 'application/json'
          },
          body: new URLSearchParams(formData).toString()
        })
        .then(response => {
          // Check if response is JSON
          const contentType = response.headers.get('content-type');
          if (contentType && contentType.includes('application/json')) {
            return response.json().then(data => ({ data, isJson: true }));
          } else {
            return response.text().then(text => ({ data: text, isJson: false }));
          }
        })
        .then(result => {
          // Reset button state
          submitButton.innerHTML = originalButtonText;
          submitButton.disabled = false;
          
          if (result.isJson) {
            // Handle JSON response
            const data = result.data;
            
            // Show toast notification
            if (data.toast) {
              showToast(data.toast.text, data.toast.type);
              
              // If successful, redirect after a short delay
              if (data.success) {
                setTimeout(() => {
                  window.location.href = '/webhooks/<%= webhookId %>';
                }, 1500);
              }
            } else if (data.success) {
              // Fallback if no toast data
              const isNewForm = recipientForm.action.endsWith('/recipients');
              const message = isNewForm ? 'Recipient added successfully' : 'Recipient updated successfully';
              showToast(message, 'success');
              setTimeout(() => {
                window.location.href = '/webhooks/<%= webhookId %>';
              }, 1500);
            }
          } else {
            // Server returned HTML or redirect
            // This means the form was submitted successfully but not as AJAX
            // We'll just redirect to the webhooks page
            window.location.href = '/webhooks/<%= webhookId %>';
          }
        })
        .catch(error => {
          console.error('Error:', error);
          submitButton.innerHTML = originalButtonText;
          submitButton.disabled = false;
          showToast('An error occurred while saving the recipient', 'danger');
        });
      });
    }
  });
</script>

<%- include('partials/footer') %> 