<%- include('partials/header') %>

<div class="container mx-auto px-4 py-6">
  <h2 class="text-2xl font-bold mb-6">My Webhooks</h2>
  
  <% if (typeof message !== 'undefined' && message) { %>
    <div class="<%= message.type === 'success' ? 'bg-green-100 border-l-4 border-green-500 text-green-700' : message.type === 'danger' ? 'bg-red-100 border-l-4 border-red-500 text-red-700' : 'bg-blue-100 border-l-4 border-blue-500 text-blue-700' %> p-4 mb-6 rounded">
      <%= message.text %>
    </div>
  <% } %>
  
  <div class="mb-6">
    <a href="/webhooks/new" class="inline-block bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors">Create New Webhook</a>
  </div>
  
  <% if (webhooks && webhooks.length > 0) { %>
    <div class="overflow-x-auto">
      <table class="min-w-full bg-white border border-gray-200">
        <thead>
          <tr class="bg-gray-100">
            <th class="py-2 px-4 border-b text-left">Name</th>
            <th class="py-2 px-4 border-b text-left">Webhook URL</th>
            <th class="py-2 px-4 border-b text-left">Format</th>
            <th class="py-2 px-4 border-b text-left">Recipients</th>
            <th class="py-2 px-4 border-b text-left">Created</th>
            <th class="py-2 px-4 border-b text-left">Actions</th>
          </tr>
        </thead>
        <tbody>
          <% webhooks.forEach(webhook => { %>
            <tr class="hover:bg-gray-50">
              <td class="py-2 px-4 border-b"><%= webhook.name %></td>
              <td class="py-2 px-4 border-b">
                <div class="flex">
                  <input type="text" class="flex-grow px-3 py-1 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="<%= baseUrl %>/api/webhook/<%= webhook.webhook_id %>" readonly>
                  <button class="copy-btn bg-gray-200 hover:bg-gray-300 text-gray-700 px-3 py-1 rounded-r-md border-t border-r border-b border-gray-300 transition-colors" type="button" data-clipboard-text="<%= baseUrl %>/api/webhook/<%= webhook.webhook_id %>">
                    Copy
                  </button>
                </div>
              </td>
              <td class="py-2 px-4 border-b">
                <span class="px-2 py-1 text-xs font-medium rounded-full <%= webhook.format_type === 'raw' ? 'bg-blue-100 text-blue-800' : webhook.format_type === 'formatted' ? 'bg-green-100 text-green-800' : 'bg-purple-100 text-purple-800' %>">
                  <%= webhook.format_type === 'raw' ? 'Raw (JSON)' : webhook.format_type === 'formatted' ? 'Pretty (System)' : 'Custom Template' %>
                </span>
                <% if (webhook.format_type === 'custom' && !webhook.is_published) { %>
                  <span class="ml-1 px-2 py-1 text-xs font-medium rounded-full bg-yellow-100 text-yellow-800">
                    Unpublished
                  </span>
                <% } %>
              </td>
              <td class="py-2 px-4 border-b"><%= webhook.recipientCount %>/<%= recipientLimit || 2 %></td>
              <td class="py-2 px-4 border-b"><%= new Date(webhook.created_at).toLocaleDateString() %></td>
              <td class="py-2 px-4 border-b">
                <div class="flex space-x-2">
                  <a href="/webhooks/<%= webhook.id %>/edit" class="bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-2 rounded transition-colors">Edit</a>
                  <button class="bg-red-600 hover:bg-red-700 text-white text-xs py-1 px-2 rounded transition-colors delete-webhook" data-id="<%= webhook.id %>" data-name="<%= webhook.name %>">Delete</button>
                </div>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
  <% } else { %>
    <div class="bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 rounded">
      You don't have any webhooks yet. Click "Create New Webhook" to get started.
    </div>
  <% } %>
</div>

<!-- Modal will be created dynamically by main.js -->

<script nonce="<%= nonce %>">
  document.addEventListener('DOMContentLoaded', function() {
    // Copy to clipboard functionality
    const copyButtons = document.querySelectorAll('.copy-btn');
    copyButtons.forEach(button => {
      button.addEventListener('click', function() {
        const text = this.getAttribute('data-clipboard-text');
        navigator.clipboard.writeText(text).then(() => {
          const originalText = this.textContent;
          this.textContent = 'Copied!';
          setTimeout(() => {
            this.textContent = originalText;
          }, 2000);
        });
      });
    });
    
    // Delete webhook functionality
    const deleteButtons = document.querySelectorAll('.delete-webhook');
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', function() {
        const webhookId = this.getAttribute('data-id');
        
        // Use the global showConfirmModal function from main.js
        showConfirmModal(
          'Are you sure you want to delete this webhook? This action cannot be undone.',
          function() {
            // On confirm
            fetch(`/api/webhooks/${webhookId}`, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              }
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                window.location.reload();
              } else {
                showToast('error', data.message || 'Error deleting webhook');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              showToast('error', 'An error occurred while deleting the webhook');
            });
          }
        );
      });
    });
  });
</script>

<%- include('partials/footer') %> 